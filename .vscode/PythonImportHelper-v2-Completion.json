[
    {
        "label": "django.contrib.auth.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.validators",
        "description": "django.contrib.auth.validators",
        "detail": "django.contrib.auth.validators",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "Book",
        "importPath": "backend.models",
        "description": "backend.models",
        "isExtraImport": true,
        "detail": "backend.models",
        "documentation": {}
    },
    {
        "label": "CustomUser",
        "importPath": "backend.models",
        "description": "backend.models",
        "isExtraImport": true,
        "detail": "backend.models",
        "documentation": {}
    },
    {
        "label": "BookVersion",
        "importPath": "backend.models",
        "description": "backend.models",
        "isExtraImport": true,
        "detail": "backend.models",
        "documentation": {}
    },
    {
        "label": "Rating",
        "importPath": "backend.models",
        "description": "backend.models",
        "isExtraImport": true,
        "detail": "backend.models",
        "documentation": {}
    },
    {
        "label": "FavoriteBookUser",
        "importPath": "backend.models",
        "description": "backend.models",
        "isExtraImport": true,
        "detail": "backend.models",
        "documentation": {}
    },
    {
        "label": "Comment",
        "importPath": "backend.models",
        "description": "backend.models",
        "isExtraImport": true,
        "detail": "backend.models",
        "documentation": {}
    },
    {
        "label": "Book",
        "importPath": "backend.models",
        "description": "backend.models",
        "isExtraImport": true,
        "detail": "backend.models",
        "documentation": {}
    },
    {
        "label": "CustomUser",
        "importPath": "backend.models",
        "description": "backend.models",
        "isExtraImport": true,
        "detail": "backend.models",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "importPath": "loanBook.settings",
        "description": "loanBook.settings",
        "isExtraImport": true,
        "detail": "loanBook.settings",
        "documentation": {}
    },
    {
        "label": "slugify",
        "importPath": "django.utils.text",
        "description": "django.utils.text",
        "isExtraImport": true,
        "detail": "django.utils.text",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "routers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "django.forms",
        "description": "django.forms",
        "isExtraImport": true,
        "detail": "django.forms",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "logout",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "validate_password",
        "importPath": "django.contrib.auth.password_validation",
        "description": "django.contrib.auth.password_validation",
        "isExtraImport": true,
        "detail": "django.contrib.auth.password_validation",
        "documentation": {}
    },
    {
        "label": "ContentFile",
        "importPath": "django.core.files.base",
        "description": "django.core.files.base",
        "isExtraImport": true,
        "detail": "django.core.files.base",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "django.core.exceptions",
        "description": "django.core.exceptions",
        "isExtraImport": true,
        "detail": "django.core.exceptions",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "django.core.exceptions",
        "description": "django.core.exceptions",
        "isExtraImport": true,
        "detail": "django.core.exceptions",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "gettext",
        "importPath": "django.utils.translation",
        "description": "django.utils.translation",
        "isExtraImport": true,
        "detail": "django.utils.translation",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "Http404",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "FileResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Token",
        "importPath": "rest_framework.authtoken.models",
        "description": "rest_framework.authtoken.models",
        "isExtraImport": true,
        "detail": "rest_framework.authtoken.models",
        "documentation": {}
    },
    {
        "label": "TokenAuthentication",
        "importPath": "rest_framework.authentication",
        "description": "rest_framework.authentication",
        "isExtraImport": true,
        "detail": "rest_framework.authentication",
        "documentation": {}
    },
    {
        "label": "action",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "BookSerializer",
        "importPath": "backend.serializer",
        "description": "backend.serializer",
        "isExtraImport": true,
        "detail": "backend.serializer",
        "documentation": {}
    },
    {
        "label": "ImageUserUpdateSerializer",
        "importPath": "backend.serializer",
        "description": "backend.serializer",
        "isExtraImport": true,
        "detail": "backend.serializer",
        "documentation": {}
    },
    {
        "label": "CustomUserSerializer",
        "importPath": "backend.serializer",
        "description": "backend.serializer",
        "isExtraImport": true,
        "detail": "backend.serializer",
        "documentation": {}
    },
    {
        "label": "PasswordSerializer",
        "importPath": "backend.serializer",
        "description": "backend.serializer",
        "isExtraImport": true,
        "detail": "backend.serializer",
        "documentation": {}
    },
    {
        "label": "LoginSerializer",
        "importPath": "backend.serializer",
        "description": "backend.serializer",
        "isExtraImport": true,
        "detail": "backend.serializer",
        "documentation": {}
    },
    {
        "label": "IsAdminOrReadOnly",
        "importPath": "backend.permission",
        "description": "backend.permission",
        "isExtraImport": true,
        "detail": "backend.permission",
        "documentation": {}
    },
    {
        "label": "IsSuperUser",
        "importPath": "backend.permission",
        "description": "backend.permission",
        "isExtraImport": true,
        "detail": "backend.permission",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "stringify",
        "importPath": "flatted",
        "description": "flatted",
        "isExtraImport": true,
        "detail": "flatted",
        "documentation": {}
    },
    {
        "label": "parse",
        "importPath": "flatted",
        "description": "flatted",
        "isExtraImport": true,
        "detail": "flatted",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "BookViewSet",
        "importPath": "backend.views",
        "description": "backend.views",
        "isExtraImport": true,
        "detail": "backend.views",
        "documentation": {}
    },
    {
        "label": "CustomUserViewSet",
        "importPath": "backend.views",
        "description": "backend.views",
        "isExtraImport": true,
        "detail": "backend.views",
        "documentation": {}
    },
    {
        "label": "DownloadBook",
        "importPath": "backend.views",
        "description": "backend.views",
        "isExtraImport": true,
        "detail": "backend.views",
        "documentation": {}
    },
    {
        "label": "LoginViewSet",
        "importPath": "backend.views",
        "description": "backend.views",
        "isExtraImport": true,
        "detail": "backend.views",
        "documentation": {}
    },
    {
        "label": "LogoutViewSet",
        "importPath": "backend.views",
        "description": "backend.views",
        "isExtraImport": true,
        "detail": "backend.views",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "loanBook.backend.migrations.0001_initial",
        "description": "loanBook.backend.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='CustomUser',\n            fields=[\n                ('password', models.CharField(max_length=128, verbose_name='password')),",
        "detail": "loanBook.backend.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "loanBook.backend.migrations.0002_alter_book_category",
        "description": "loanBook.backend.migrations.0002_alter_book_category",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('backend', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='book',\n            name='category',\n            field=models.CharField(choices=[('Romance', 'Romance'), ('Biography', 'Biography'), ('Autobiography', 'Autobiography'), ('Business', 'Business'), ('Finance', 'Finance'), ('Personal Development', 'Personal Development'), ('Science', 'Science'), ('Guide', 'Guide'), ('Cooking', 'Cooking'), ('Technology', 'Technology'), ('Philosophy', 'Philosophy'), ('Religion', 'Religion'), ('Spirituality', 'Spirituality'), ('Economics', 'Economics'), ('Entrepreneurship', 'Entrepreneurship'), ('Politics', 'Politics'), ('Environment', 'Environment')], max_length=200),\n        ),",
        "detail": "loanBook.backend.migrations.0002_alter_book_category",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "loanBook.backend.migrations.0003_rename_id_customuser_uid",
        "description": "loanBook.backend.migrations.0003_rename_id_customuser_uid",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('backend', '0002_alter_book_category'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='customuser',\n            old_name='id',\n            new_name='uid',\n        ),",
        "detail": "loanBook.backend.migrations.0003_rename_id_customuser_uid",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "loanBook.backend.migrations.0004_rename_uid_customuser_uuid",
        "description": "loanBook.backend.migrations.0004_rename_uid_customuser_uuid",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('backend', '0003_rename_id_customuser_uid'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='customuser',\n            old_name='uid',\n            new_name='uuid',\n        ),",
        "detail": "loanBook.backend.migrations.0004_rename_uid_customuser_uuid",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "loanBook.backend.migrations.0005_rename_uuid_customuser_id",
        "description": "loanBook.backend.migrations.0005_rename_uuid_customuser_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('backend', '0004_rename_uid_customuser_uuid'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='customuser',\n            old_name='uuid',\n            new_name='id',\n        ),",
        "detail": "loanBook.backend.migrations.0005_rename_uuid_customuser_id",
        "documentation": {}
    },
    {
        "label": "BackendConfig",
        "kind": 6,
        "importPath": "loanBook.backend.apps",
        "description": "loanBook.backend.apps",
        "peekOfCode": "class BackendConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'backend'",
        "detail": "loanBook.backend.apps",
        "documentation": {}
    },
    {
        "label": "CustomUser",
        "kind": 6,
        "importPath": "loanBook.backend.models",
        "description": "loanBook.backend.models",
        "peekOfCode": "class CustomUser(AbstractUser):\n    USER_TYPE_CHOICES = (\n        (1, 'Editeur'),\n        (2, 'Lecteur'),\n    )\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    user_type = models.PositiveSmallIntegerField(choices=USER_TYPE_CHOICES, default=2)\n    biography = models.TextField(null=True, blank=True)\n    phone_number = models.CharField(max_length=15, blank=True, null=True)\n    country = models.CharField(max_length=100,null=True, blank=True)",
        "detail": "loanBook.backend.models",
        "documentation": {}
    },
    {
        "label": "Book",
        "kind": 6,
        "importPath": "loanBook.backend.models",
        "description": "loanBook.backend.models",
        "peekOfCode": "class Book(models.Model):\n    CATEGORY_BOOK = (\n        ('Romance', 'Romance'),\n        ('Biography', 'Biography'),\n        ('Autobiography', 'Autobiography'),\n        ('Business', 'Business'),\n        ('Finance', 'Finance'),\n        ('Personal Development', 'Personal Development'),\n        ('Science', 'Science'),\n        ('Guide', 'Guide'),",
        "detail": "loanBook.backend.models",
        "documentation": {}
    },
    {
        "label": "Rating",
        "kind": 6,
        "importPath": "loanBook.backend.models",
        "description": "loanBook.backend.models",
        "peekOfCode": "class Rating(models.Model):\n    book = models.ForeignKey(Book, related_name='ratings', on_delete=models.CASCADE)\n    user = models.ForeignKey(User_model, on_delete=models.CASCADE)\n    score = models.PositiveSmallIntegerField()  # Vous pouvez limiter cela à un score maximal, par exemple 1-5\n    class Meta:\n        unique_together = (('user', 'book'),)  # S'assurer qu'un utilisateur ne peut noter qu'une seule fois un livre\n    def save(self, *args, **kwargs):\n        super().save(*args, **kwargs)\n        if self.pk:  # Vérifie que c'est une création de note et non une mise à jour\n            book = self.book",
        "detail": "loanBook.backend.models",
        "documentation": {}
    },
    {
        "label": "FavoriteBookUser",
        "kind": 6,
        "importPath": "loanBook.backend.models",
        "description": "loanBook.backend.models",
        "peekOfCode": "class FavoriteBookUser(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    user = models.ForeignKey(User_model, on_delete=models.CASCADE)\n    book = models.ForeignKey(Book,on_delete=models.CASCADE)\n    created_at = models.DateTimeField(auto_now_add=True)\n    def __str__(self):\n        return f\"{self.book.title} put favorite by {self.user.username}\"\nclass Comment(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    user = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)",
        "detail": "loanBook.backend.models",
        "documentation": {}
    },
    {
        "label": "Comment",
        "kind": 6,
        "importPath": "loanBook.backend.models",
        "description": "loanBook.backend.models",
        "peekOfCode": "class Comment(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    user = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)\n    book = models.ForeignKey(Book, related_name='comments', on_delete=models.CASCADE)\n    parent = models.ForeignKey('self', on_delete=models.CASCADE, related_name='replies', null=True, blank=True)\n    content = models.TextField()\n    publish_date = models.DateTimeField(auto_now_add=True)\n    def __str__(self):\n        return f'Comment by {self.user.username} on {self.book.title}'\nclass BookVersion(models.Model):",
        "detail": "loanBook.backend.models",
        "documentation": {}
    },
    {
        "label": "BookVersion",
        "kind": 6,
        "importPath": "loanBook.backend.models",
        "description": "loanBook.backend.models",
        "peekOfCode": "class BookVersion(models.Model):\n    BOOK_TYPES = (\n        ('pdf', 'PDF'),\n        ('audio', 'Audio'),\n        ('ebook', 'E-book'),\n    )\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    book = models.ForeignKey(Book, related_name='versions', on_delete=models.CASCADE)\n    book_type = models.CharField(max_length=10, choices=BOOK_TYPES)\n    language = models.CharField(max_length=30)",
        "detail": "loanBook.backend.models",
        "documentation": {}
    },
    {
        "label": "IsAdminOrReadOnly",
        "kind": 6,
        "importPath": "loanBook.backend.permission",
        "description": "loanBook.backend.permission",
        "peekOfCode": "class IsAdminOrReadOnly(permissions.BasePermission):\n    def has_permission(self, request, view):\n        if request.method in permissions.SAFE_METHODS:\n            return request.user\n        return request.user and request.user.is_authenticated and (request.user.is_staff or request.user.is_superuser)\nclass IsSuperUser(permissions.BasePermission):\n    def has_permission(self, request, view):\n        return request.user and request.user.is_superuser and request.user.is_authenticated",
        "detail": "loanBook.backend.permission",
        "documentation": {}
    },
    {
        "label": "IsSuperUser",
        "kind": 6,
        "importPath": "loanBook.backend.permission",
        "description": "loanBook.backend.permission",
        "peekOfCode": "class IsSuperUser(permissions.BasePermission):\n    def has_permission(self, request, view):\n        return request.user and request.user.is_superuser and request.user.is_authenticated",
        "detail": "loanBook.backend.permission",
        "documentation": {}
    },
    {
        "label": "BookVersionSerializer",
        "kind": 6,
        "importPath": "loanBook.backend.serializer",
        "description": "loanBook.backend.serializer",
        "peekOfCode": "class BookVersionSerializer(serializers.HyperlinkedModelSerializer):\n    class Meta:\n        models=BookVersion\n        fields = '__all__'\n        exclude = ['created_at']\n    def Validate_data(self, data):\n        if not data.get(\"book\"):\n            raise serializers.ValidateError(\"Book:Book is required\")\n        if not data.get(\"book_type\"):\n            raise serializers.ValidationError(\"Book Type: Book type is required\")",
        "detail": "loanBook.backend.serializer",
        "documentation": {}
    },
    {
        "label": "BookSerializer",
        "kind": 6,
        "importPath": "loanBook.backend.serializer",
        "description": "loanBook.backend.serializer",
        "peekOfCode": "class BookSerializer(serializers.HyperlinkedModelSerializer):\n    user = serializers.HyperlinkedRelatedField(\n        view_name='user-detail',\n        read_only=True,\n        lookup_field='id' \n    )\n    class Meta:\n        model = Book\n        fields = ['url', 'author', 'summary','title', 'year_publication','download_count','category','user','slug','rating_sum','rating_count','id']\n        read_only_fields = [\"id\",\"slug\",\"rating_sum\",\"download_count\"]",
        "detail": "loanBook.backend.serializer",
        "documentation": {}
    },
    {
        "label": "CustomUserSerializer",
        "kind": 6,
        "importPath": "loanBook.backend.serializer",
        "description": "loanBook.backend.serializer",
        "peekOfCode": "class CustomUserSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = CustomUser\n        fields = ['url', 'username', 'first_name','last_name', 'email', 'user_type', 'biography', 'phone_number', 'country', 'total_book_download', 'image', 'created_at','password']\n        read_only_fields = ['total_book_download', 'created_at']\n        extra_kwargs = {\n            'password': {'write_only': True},\n            'url': {'view_name': 'user-detail', 'lookup_field': 'pk'}\n        }\n    # Je crée une fois le user de base avec un role de niveau 2 par defaut.",
        "detail": "loanBook.backend.serializer",
        "documentation": {}
    },
    {
        "label": "PasswordSerializer",
        "kind": 6,
        "importPath": "loanBook.backend.serializer",
        "description": "loanBook.backend.serializer",
        "peekOfCode": "class PasswordSerializer(serializers.Serializer):\n    old_password = serializers.CharField(required=True)\n    new_password = serializers.CharField(required=True)\n    confirm_password = serializers.CharField(required=True)\n    def validate(self, data):\n        old_password = data.get('old_password')  # Utiliser get pour éviter KeyError\n        new_password = data.get('new_password')  # Utiliser get pour éviter KeyError\n        confirm_password = data.get('confirm_password')  # Utiliser get pour éviter KeyError\n        try:\n            validate_password(new_password)",
        "detail": "loanBook.backend.serializer",
        "documentation": {}
    },
    {
        "label": "ImageUserUpdateSerializer",
        "kind": 6,
        "importPath": "loanBook.backend.serializer",
        "description": "loanBook.backend.serializer",
        "peekOfCode": "class ImageUserUpdateSerializer(serializers.Serializer):\n    image = serializers.ImageField(required=True)\n    def validate_image(self, value):\n        MAX_SIZE = 12000000  # 12 MB\n        # `value` est l'objet fichier ici, pas un dictionnaire\n        if value.size > MAX_SIZE:\n            raise ValidationError(\"Image volumineuse, taille maximale autorisée est de 12 MB.\")\n        # Vérification du format de l'image\n        valid_extensions = ['jpg', 'jpeg', 'png', 'svg']\n        extension = os.path.splitext(value.name)[1][1:].lower()",
        "detail": "loanBook.backend.serializer",
        "documentation": {}
    },
    {
        "label": "LoginSerializer",
        "kind": 6,
        "importPath": "loanBook.backend.serializer",
        "description": "loanBook.backend.serializer",
        "peekOfCode": "class LoginSerializer(serializers.Serializer):\n    username = serializers.CharField(required=True)\n    password = serializers.CharField(required=True)",
        "detail": "loanBook.backend.serializer",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "loanBook.backend.serializer",
        "description": "loanBook.backend.serializer",
        "peekOfCode": "User = get_user_model()\nclass BookVersionSerializer(serializers.HyperlinkedModelSerializer):\n    class Meta:\n        models=BookVersion\n        fields = '__all__'\n        exclude = ['created_at']\n    def Validate_data(self, data):\n        if not data.get(\"book\"):\n            raise serializers.ValidateError(\"Book:Book is required\")\n        if not data.get(\"book_type\"):",
        "detail": "loanBook.backend.serializer",
        "documentation": {}
    },
    {
        "label": "CustomPasswordValidator",
        "kind": 6,
        "importPath": "loanBook.backend.validators",
        "description": "loanBook.backend.validators",
        "peekOfCode": "class CustomPasswordValidator:\n    def validate(self, password, user=None):\n        if not any(char.isdigit() for char in password):\n            raise ValidationError(_('Le mot de passe doit contenir au moins un chiffre.'), code='password_no_number')\n        if not any(char.isalpha() for char in password):\n            raise ValidationError(_('Le mot de passe doit contenir au moins une lettre.'), code='password_no_letter')\n        if not any(char.islower() for char in password):\n            raise ValidationError(_('Le mot de passe doit contenir au moins une minuscule.'), code='password_no_lower')\n        if not any(char.isupper() for char in password):\n            raise ValidationError(_('Le mot de passe doit contenir au moins une majuscule.'), code='password_no_upper')",
        "detail": "loanBook.backend.validators",
        "documentation": {}
    },
    {
        "label": "BookViewSet",
        "kind": 6,
        "importPath": "loanBook.backend.views",
        "description": "loanBook.backend.views",
        "peekOfCode": "class BookViewSet(viewsets.ModelViewSet):\n    queryset = Book.objects.all()\n    serializer_class = BookSerializer\n    def get_permissions(self):\n        if self.action in ['create','update','partial_update']:\n            return [IsAdminOrReadOnly(),IsSuperUser(), permissions.IsAuthenticated()]\n        elif self.action in [\"retrieve\",\"list\"]:\n            return [permissions.AllowAny()]\n        else:\n            return [permissions.IsAuthenticated()]",
        "detail": "loanBook.backend.views",
        "documentation": {}
    },
    {
        "label": "CustomUserViewSet",
        "kind": 6,
        "importPath": "loanBook.backend.views",
        "description": "loanBook.backend.views",
        "peekOfCode": "class CustomUserViewSet(viewsets.ModelViewSet):\n    queryset = CustomUser.objects.all()\n    serializer_class = CustomUserSerializer\n    lookup_field = 'id'\n    def get_permissions(self):\n        \"\"\"\n        Instantier et retourner la liste des permissions que cette vue requiert.\n        \"\"\"\n        if self.action in ['create']:\n            return [permissions.AllowAny()]",
        "detail": "loanBook.backend.views",
        "documentation": {}
    },
    {
        "label": "LoginViewSet",
        "kind": 6,
        "importPath": "loanBook.backend.views",
        "description": "loanBook.backend.views",
        "peekOfCode": "class LoginViewSet(APIView):\n    permission_classes = [permissions.AllowAny]\n    def post(self, request):\n        serializer = LoginSerializer(data=request.data)\n        if not serializer.is_valid():\n            return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)\n        username = serializer.validated_data['username']\n        password = serializer.validated_data['password']\n        user = authenticate(username=username, password=password)\n        if not user:",
        "detail": "loanBook.backend.views",
        "documentation": {}
    },
    {
        "label": "LogoutViewSet",
        "kind": 6,
        "importPath": "loanBook.backend.views",
        "description": "loanBook.backend.views",
        "peekOfCode": "class LogoutViewSet(APIView):\n    def post(self, request, format=None):\n        logout(request)\n        return Response({\"success\": \"Successfully logged out\"}, status=status.HTTP_200_OK)\n# class BorrowViewSet(viewsets.ModelViewSet):\n#     queryset = Borrow.objects.all()\n#     serializer_class = EmpruntSerializer\n#     authentication_classes = [TokenAuthentication]\n#     def get_queryset(self):\n#         if self.request.user.is_authenticated:",
        "detail": "loanBook.backend.views",
        "documentation": {}
    },
    {
        "label": "DownloadBook",
        "kind": 6,
        "importPath": "loanBook.backend.views",
        "description": "loanBook.backend.views",
        "peekOfCode": "class DownloadBook(APIView):\n    authentication_classes = [TokenAuthentication]\n    def get(self, request, pk):\n        # Récupérer le livre par son ID\n        book = get_object_or_404(Book, pk=pk)\n        # Chemin du fichier PDF\n        file_path = os.path.join(settings.MEDIA_ROOT, book.pdf_file.name)\n        # Debug: Afficher le chemin du fichier\n        print(f\"Chemin du fichier: {file_path}\")\n        # Vérifier que le fichier existe",
        "detail": "loanBook.backend.views",
        "documentation": {}
    },
    {
        "label": "_Known",
        "kind": 6,
        "importPath": "loanBook.frontend.front-book.node_modules.flatted.python.flatted",
        "description": "loanBook.frontend.front-book.node_modules.flatted.python.flatted",
        "peekOfCode": "class _Known:\n    def __init__(self):\n        self.key = []\n        self.value = []\nclass _String:\n    def __init__(self, value):\n        self.value = value\ndef _array_keys(value):\n    keys = []\n    i = 0",
        "detail": "loanBook.frontend.front-book.node_modules.flatted.python.flatted",
        "documentation": {}
    },
    {
        "label": "_String",
        "kind": 6,
        "importPath": "loanBook.frontend.front-book.node_modules.flatted.python.flatted",
        "description": "loanBook.frontend.front-book.node_modules.flatted.python.flatted",
        "peekOfCode": "class _String:\n    def __init__(self, value):\n        self.value = value\ndef _array_keys(value):\n    keys = []\n    i = 0\n    for _ in value:\n        keys.append(i)\n        i += 1\n    return keys",
        "detail": "loanBook.frontend.front-book.node_modules.flatted.python.flatted",
        "documentation": {}
    },
    {
        "label": "parse",
        "kind": 2,
        "importPath": "loanBook.frontend.front-book.node_modules.flatted.python.flatted",
        "description": "loanBook.frontend.front-book.node_modules.flatted.python.flatted",
        "peekOfCode": "def parse(value, *args, **kwargs):\n    json = _json.loads(value, *args, **kwargs)\n    wrapped = []\n    for value in json:\n        wrapped.append(_wrap(value))\n    input = []\n    for value in wrapped:\n        if isinstance(value, _String):\n            input.append(value.value)\n        else:",
        "detail": "loanBook.frontend.front-book.node_modules.flatted.python.flatted",
        "documentation": {}
    },
    {
        "label": "stringify",
        "kind": 2,
        "importPath": "loanBook.frontend.front-book.node_modules.flatted.python.flatted",
        "description": "loanBook.frontend.front-book.node_modules.flatted.python.flatted",
        "peekOfCode": "def stringify(value, *args, **kwargs):\n    known = _Known()\n    input = []\n    output = []\n    i = int(_index(known, input, value))\n    while i < len(input):\n        output.append(_transform(known, input, input[i]))\n        i += 1\n    return _json.dumps(output, *args, **kwargs)",
        "detail": "loanBook.frontend.front-book.node_modules.flatted.python.flatted",
        "documentation": {}
    },
    {
        "label": "stringify",
        "kind": 2,
        "importPath": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "description": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "peekOfCode": "def stringify(value):\n    return _stringify(value, separators=(',', ':'))\nassert stringify([None, None]) == '[[null,null]]'\na = []\no = {}\nassert stringify(a) == '[[]]'\nassert stringify(o) == '[{}]'\na.append(a)\no['o'] = o\nassert stringify(a) == '[[\"0\"]]'",
        "detail": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "a",
        "kind": 5,
        "importPath": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "description": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "peekOfCode": "a = []\no = {}\nassert stringify(a) == '[[]]'\nassert stringify(o) == '[{}]'\na.append(a)\no['o'] = o\nassert stringify(a) == '[[\"0\"]]'\nassert stringify(o) == '[{\"o\":\"0\"}]'\nb = parse(stringify(a))\nassert isinstance(b, list) and b[0] == b",
        "detail": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o",
        "kind": 5,
        "importPath": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "description": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "peekOfCode": "o = {}\nassert stringify(a) == '[[]]'\nassert stringify(o) == '[{}]'\na.append(a)\no['o'] = o\nassert stringify(a) == '[[\"0\"]]'\nassert stringify(o) == '[{\"o\":\"0\"}]'\nb = parse(stringify(a))\nassert isinstance(b, list) and b[0] == b\na.append(1)",
        "detail": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['o']",
        "kind": 5,
        "importPath": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "description": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "peekOfCode": "o['o'] = o\nassert stringify(a) == '[[\"0\"]]'\nassert stringify(o) == '[{\"o\":\"0\"}]'\nb = parse(stringify(a))\nassert isinstance(b, list) and b[0] == b\na.append(1)\na.append('two')\na.append(True)\no['one'] = 1\no['two'] = 'two'",
        "detail": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "b",
        "kind": 5,
        "importPath": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "description": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "peekOfCode": "b = parse(stringify(a))\nassert isinstance(b, list) and b[0] == b\na.append(1)\na.append('two')\na.append(True)\no['one'] = 1\no['two'] = 'two'\no['three'] = True\nassert stringify(a) == '[[\"0\",1,\"1\",true],\"two\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true},\"two\"]'",
        "detail": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['one']",
        "kind": 5,
        "importPath": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "description": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "peekOfCode": "o['one'] = 1\no['two'] = 'two'\no['three'] = True\nassert stringify(a) == '[[\"0\",1,\"1\",true],\"two\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true},\"two\"]'\na.append(o)\no['a'] = a\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\"}]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\"},\"two\",[\"2\",1,\"1\",true,\"0\"]]'\na.append({'test': 'OK'})",
        "detail": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['two']",
        "kind": 5,
        "importPath": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "description": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "peekOfCode": "o['two'] = 'two'\no['three'] = True\nassert stringify(a) == '[[\"0\",1,\"1\",true],\"two\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true},\"two\"]'\na.append(o)\no['a'] = a\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\"}]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\"},\"two\",[\"2\",1,\"1\",true,\"0\"]]'\na.append({'test': 'OK'})\na.append([1, 2, 3])",
        "detail": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['three']",
        "kind": 5,
        "importPath": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "description": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "peekOfCode": "o['three'] = True\nassert stringify(a) == '[[\"0\",1,\"1\",true],\"two\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true},\"two\"]'\na.append(o)\no['a'] = a\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\"}]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\"},\"two\",[\"2\",1,\"1\",true,\"0\"]]'\na.append({'test': 'OK'})\na.append([1, 2, 3])\no['test'] = {'test': 'OK'}",
        "detail": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['a']",
        "kind": 5,
        "importPath": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "description": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "peekOfCode": "o['a'] = a\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\"}]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\"},\"two\",[\"2\",1,\"1\",true,\"0\"]]'\na.append({'test': 'OK'})\na.append([1, 2, 3])\no['test'] = {'test': 'OK'}\no['array'] = [1, 2, 3]\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\",\"3\",\"4\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\",\"test\":\"3\",\"array\":\"4\"},{\"test\":\"5\"},[1,2,3],\"OK\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\",\"test\":\"3\",\"array\":\"4\"},\"two\",[\"2\",1,\"1\",true,\"0\",\"3\",\"4\"],{\"test\":\"5\"},[1,2,3],\"OK\"]'\na2 = parse(stringify(a));",
        "detail": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['test']",
        "kind": 5,
        "importPath": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "description": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "peekOfCode": "o['test'] = {'test': 'OK'}\no['array'] = [1, 2, 3]\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\",\"3\",\"4\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\",\"test\":\"3\",\"array\":\"4\"},{\"test\":\"5\"},[1,2,3],\"OK\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\",\"test\":\"3\",\"array\":\"4\"},\"two\",[\"2\",1,\"1\",true,\"0\",\"3\",\"4\"],{\"test\":\"5\"},[1,2,3],\"OK\"]'\na2 = parse(stringify(a));\no2 = parse(stringify(o));\nassert a2[0] == a2\nassert o2['o'] == o2\nassert a2[1] == 1 and a2[2] == 'two' and a2[3] == True and isinstance(a2[4], dict)\nassert a2[4] == a2[4]['o'] and a2 == a2[4]['o']['a']",
        "detail": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['array']",
        "kind": 5,
        "importPath": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "description": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "peekOfCode": "o['array'] = [1, 2, 3]\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\",\"3\",\"4\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\",\"test\":\"3\",\"array\":\"4\"},{\"test\":\"5\"},[1,2,3],\"OK\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\",\"test\":\"3\",\"array\":\"4\"},\"two\",[\"2\",1,\"1\",true,\"0\",\"3\",\"4\"],{\"test\":\"5\"},[1,2,3],\"OK\"]'\na2 = parse(stringify(a));\no2 = parse(stringify(o));\nassert a2[0] == a2\nassert o2['o'] == o2\nassert a2[1] == 1 and a2[2] == 'two' and a2[3] == True and isinstance(a2[4], dict)\nassert a2[4] == a2[4]['o'] and a2 == a2[4]['o']['a']\nstr = parse('[{\"prop\":\"1\",\"a\":\"2\",\"b\":\"3\"},{\"value\":123},[\"4\",\"5\"],{\"e\":\"6\",\"t\":\"7\",\"p\":4},{},{\"b\":\"8\"},\"f\",{\"a\":\"9\"},[\"10\"],\"sup\",{\"a\":1,\"d\":2,\"c\":\"7\",\"z\":\"11\",\"h\":1},{\"g\":2,\"a\":\"7\",\"b\":\"12\",\"f\":6},{\"r\":4,\"u\":\"7\",\"c\":5}]')",
        "detail": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "a2",
        "kind": 5,
        "importPath": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "description": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "peekOfCode": "a2 = parse(stringify(a));\no2 = parse(stringify(o));\nassert a2[0] == a2\nassert o2['o'] == o2\nassert a2[1] == 1 and a2[2] == 'two' and a2[3] == True and isinstance(a2[4], dict)\nassert a2[4] == a2[4]['o'] and a2 == a2[4]['o']['a']\nstr = parse('[{\"prop\":\"1\",\"a\":\"2\",\"b\":\"3\"},{\"value\":123},[\"4\",\"5\"],{\"e\":\"6\",\"t\":\"7\",\"p\":4},{},{\"b\":\"8\"},\"f\",{\"a\":\"9\"},[\"10\"],\"sup\",{\"a\":1,\"d\":2,\"c\":\"7\",\"z\":\"11\",\"h\":1},{\"g\":2,\"a\":\"7\",\"b\":\"12\",\"f\":6},{\"r\":4,\"u\":\"7\",\"c\":5}]')\nassert str['b']['t']['a'] == 'sup' and str['a'][1]['b'][0]['c'] == str['b']['t']\noo = parse('[{\"a\":\"1\",\"b\":\"0\",\"c\":\"2\"},{\"aa\":\"3\"},{\"ca\":\"4\",\"cb\":\"5\",\"cc\":\"6\",\"cd\":\"7\",\"ce\":\"8\",\"cf\":\"9\"},{\"aaa\":\"10\"},{\"caa\":\"4\"},{\"cba\":\"5\"},{\"cca\":\"2\"},{\"cda\":\"4\"},\"value2\",\"value3\",\"value1\"]');\nassert oo['a']['aa']['aaa'] == 'value1' and oo == oo['b'] and oo['c']['ca']['caa'] == oo['c']['ca']",
        "detail": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o2",
        "kind": 5,
        "importPath": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "description": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "peekOfCode": "o2 = parse(stringify(o));\nassert a2[0] == a2\nassert o2['o'] == o2\nassert a2[1] == 1 and a2[2] == 'two' and a2[3] == True and isinstance(a2[4], dict)\nassert a2[4] == a2[4]['o'] and a2 == a2[4]['o']['a']\nstr = parse('[{\"prop\":\"1\",\"a\":\"2\",\"b\":\"3\"},{\"value\":123},[\"4\",\"5\"],{\"e\":\"6\",\"t\":\"7\",\"p\":4},{},{\"b\":\"8\"},\"f\",{\"a\":\"9\"},[\"10\"],\"sup\",{\"a\":1,\"d\":2,\"c\":\"7\",\"z\":\"11\",\"h\":1},{\"g\":2,\"a\":\"7\",\"b\":\"12\",\"f\":6},{\"r\":4,\"u\":\"7\",\"c\":5}]')\nassert str['b']['t']['a'] == 'sup' and str['a'][1]['b'][0]['c'] == str['b']['t']\noo = parse('[{\"a\":\"1\",\"b\":\"0\",\"c\":\"2\"},{\"aa\":\"3\"},{\"ca\":\"4\",\"cb\":\"5\",\"cc\":\"6\",\"cd\":\"7\",\"ce\":\"8\",\"cf\":\"9\"},{\"aaa\":\"10\"},{\"caa\":\"4\"},{\"cba\":\"5\"},{\"cca\":\"2\"},{\"cda\":\"4\"},\"value2\",\"value3\",\"value1\"]');\nassert oo['a']['aa']['aaa'] == 'value1' and oo == oo['b'] and oo['c']['ca']['caa'] == oo['c']['ca']\nprint('OK')",
        "detail": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "str",
        "kind": 5,
        "importPath": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "description": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "peekOfCode": "str = parse('[{\"prop\":\"1\",\"a\":\"2\",\"b\":\"3\"},{\"value\":123},[\"4\",\"5\"],{\"e\":\"6\",\"t\":\"7\",\"p\":4},{},{\"b\":\"8\"},\"f\",{\"a\":\"9\"},[\"10\"],\"sup\",{\"a\":1,\"d\":2,\"c\":\"7\",\"z\":\"11\",\"h\":1},{\"g\":2,\"a\":\"7\",\"b\":\"12\",\"f\":6},{\"r\":4,\"u\":\"7\",\"c\":5}]')\nassert str['b']['t']['a'] == 'sup' and str['a'][1]['b'][0]['c'] == str['b']['t']\noo = parse('[{\"a\":\"1\",\"b\":\"0\",\"c\":\"2\"},{\"aa\":\"3\"},{\"ca\":\"4\",\"cb\":\"5\",\"cc\":\"6\",\"cd\":\"7\",\"ce\":\"8\",\"cf\":\"9\"},{\"aaa\":\"10\"},{\"caa\":\"4\"},{\"cba\":\"5\"},{\"cca\":\"2\"},{\"cda\":\"4\"},\"value2\",\"value3\",\"value1\"]');\nassert oo['a']['aa']['aaa'] == 'value1' and oo == oo['b'] and oo['c']['ca']['caa'] == oo['c']['ca']\nprint('OK')",
        "detail": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "oo",
        "kind": 5,
        "importPath": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "description": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "peekOfCode": "oo = parse('[{\"a\":\"1\",\"b\":\"0\",\"c\":\"2\"},{\"aa\":\"3\"},{\"ca\":\"4\",\"cb\":\"5\",\"cc\":\"6\",\"cd\":\"7\",\"ce\":\"8\",\"cf\":\"9\"},{\"aaa\":\"10\"},{\"caa\":\"4\"},{\"cba\":\"5\"},{\"cca\":\"2\"},{\"cda\":\"4\"},\"value2\",\"value3\",\"value1\"]');\nassert oo['a']['aa']['aaa'] == 'value1' and oo == oo['b'] and oo['c']['ca']['caa'] == oo['c']['ca']\nprint('OK')",
        "detail": "loanBook.frontend.front-book.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "loanBook.loanBook.asgi",
        "description": "loanBook.loanBook.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "loanBook.loanBook.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "loanBook.loanBook.settings",
        "description": "loanBook.loanBook.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-&^vy!=yd1of*lif&w_e)wv%5#9!-vk@(jhv3za-7#@58ed^c*-'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "loanBook.loanBook.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "loanBook.loanBook.settings",
        "description": "loanBook.loanBook.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-&^vy!=yd1of*lif&w_e)wv%5#9!-vk@(jhv3za-7#@58ed^c*-'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "loanBook.loanBook.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "loanBook.loanBook.settings",
        "description": "loanBook.loanBook.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "loanBook.loanBook.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "loanBook.loanBook.settings",
        "description": "loanBook.loanBook.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'backend',",
        "detail": "loanBook.loanBook.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "loanBook.loanBook.settings",
        "description": "loanBook.loanBook.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'backend',\n    'rest_framework',\n    'rest_framework.authtoken',",
        "detail": "loanBook.loanBook.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOWED_ORIGINS",
        "kind": 5,
        "importPath": "loanBook.loanBook.settings",
        "description": "loanBook.loanBook.settings",
        "peekOfCode": "CORS_ALLOWED_ORIGINS = [\n    'http://localhost:5173',  # L'URL de votre application Vue.js\n]\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'corsheaders.middleware.CorsMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    # 'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',",
        "detail": "loanBook.loanBook.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "loanBook.loanBook.settings",
        "description": "loanBook.loanBook.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'corsheaders.middleware.CorsMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    # 'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]",
        "detail": "loanBook.loanBook.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "loanBook.loanBook.settings",
        "description": "loanBook.loanBook.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework.authentication.TokenAuthentication',\n    ),\n    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',\n    'PAGE_SIZE': 10\n}\nROOT_URLCONF = 'loanBook.urls'\nTEMPLATES = [\n    {",
        "detail": "loanBook.loanBook.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "loanBook.loanBook.settings",
        "description": "loanBook.loanBook.settings",
        "peekOfCode": "ROOT_URLCONF = 'loanBook.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "loanBook.loanBook.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "loanBook.loanBook.settings",
        "description": "loanBook.loanBook.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "loanBook.loanBook.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "loanBook.loanBook.settings",
        "description": "loanBook.loanBook.settings",
        "peekOfCode": "WSGI_APPLICATION = 'loanBook.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "loanBook.loanBook.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "loanBook.loanBook.settings",
        "description": "loanBook.loanBook.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "loanBook.loanBook.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "loanBook.loanBook.settings",
        "description": "loanBook.loanBook.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n        'OPTIONS': {\n            'min_length': 9,\n        },\n    },",
        "detail": "loanBook.loanBook.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "loanBook.loanBook.settings",
        "description": "loanBook.loanBook.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n]",
        "detail": "loanBook.loanBook.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "loanBook.loanBook.settings",
        "description": "loanBook.loanBook.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n]\n# Configurez STATIC_ROOT pour spécifier le chemin absolu vers le répertoire où les fichiers statiques collectés seront stockés",
        "detail": "loanBook.loanBook.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "loanBook.loanBook.settings",
        "description": "loanBook.loanBook.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n]\n# Configurez STATIC_ROOT pour spécifier le chemin absolu vers le répertoire où les fichiers statiques collectés seront stockés\nSTATIC_ROOT = BASE_DIR / 'staticfiles'",
        "detail": "loanBook.loanBook.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "loanBook.loanBook.settings",
        "description": "loanBook.loanBook.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n]\n# Configurez STATIC_ROOT pour spécifier le chemin absolu vers le répertoire où les fichiers statiques collectés seront stockés\nSTATIC_ROOT = BASE_DIR / 'staticfiles'\n# Default primary key field type",
        "detail": "loanBook.loanBook.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "loanBook.loanBook.settings",
        "description": "loanBook.loanBook.settings",
        "peekOfCode": "STATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n]\n# Configurez STATIC_ROOT pour spécifier le chemin absolu vers le répertoire où les fichiers statiques collectés seront stockés\nSTATIC_ROOT = BASE_DIR / 'staticfiles'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n# Définir la durée de vie des tokens (par défaut : 30 jours)",
        "detail": "loanBook.loanBook.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "loanBook.loanBook.settings",
        "description": "loanBook.loanBook.settings",
        "peekOfCode": "STATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n]\n# Configurez STATIC_ROOT pour spécifier le chemin absolu vers le répertoire où les fichiers statiques collectés seront stockés\nSTATIC_ROOT = BASE_DIR / 'staticfiles'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n# Définir la durée de vie des tokens (par défaut : 30 jours)\nTOKEN_EXPIRATION = 30",
        "detail": "loanBook.loanBook.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "loanBook.loanBook.settings",
        "description": "loanBook.loanBook.settings",
        "peekOfCode": "STATIC_ROOT = BASE_DIR / 'staticfiles'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n# Définir la durée de vie des tokens (par défaut : 30 jours)\nTOKEN_EXPIRATION = 30\n# Définir la durée de vie des tokens par rapport à l'heure actuelle (par défaut : timedelta(minutes=5))\nTOKEN_EXPIRATION_DELTA = timedelta(days=TOKEN_EXPIRATION)\nURL_REDIRECT_LOGIN = 'login/'\nAPPEND_SLASH=False",
        "detail": "loanBook.loanBook.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "loanBook.loanBook.settings",
        "description": "loanBook.loanBook.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n# Définir la durée de vie des tokens (par défaut : 30 jours)\nTOKEN_EXPIRATION = 30\n# Définir la durée de vie des tokens par rapport à l'heure actuelle (par défaut : timedelta(minutes=5))\nTOKEN_EXPIRATION_DELTA = timedelta(days=TOKEN_EXPIRATION)\nURL_REDIRECT_LOGIN = 'login/'\nAPPEND_SLASH=False\nAUTH_USER_MODEL = 'backend.CustomUser'",
        "detail": "loanBook.loanBook.settings",
        "documentation": {}
    },
    {
        "label": "TOKEN_EXPIRATION",
        "kind": 5,
        "importPath": "loanBook.loanBook.settings",
        "description": "loanBook.loanBook.settings",
        "peekOfCode": "TOKEN_EXPIRATION = 30\n# Définir la durée de vie des tokens par rapport à l'heure actuelle (par défaut : timedelta(minutes=5))\nTOKEN_EXPIRATION_DELTA = timedelta(days=TOKEN_EXPIRATION)\nURL_REDIRECT_LOGIN = 'login/'\nAPPEND_SLASH=False\nAUTH_USER_MODEL = 'backend.CustomUser'",
        "detail": "loanBook.loanBook.settings",
        "documentation": {}
    },
    {
        "label": "TOKEN_EXPIRATION_DELTA",
        "kind": 5,
        "importPath": "loanBook.loanBook.settings",
        "description": "loanBook.loanBook.settings",
        "peekOfCode": "TOKEN_EXPIRATION_DELTA = timedelta(days=TOKEN_EXPIRATION)\nURL_REDIRECT_LOGIN = 'login/'\nAPPEND_SLASH=False\nAUTH_USER_MODEL = 'backend.CustomUser'",
        "detail": "loanBook.loanBook.settings",
        "documentation": {}
    },
    {
        "label": "URL_REDIRECT_LOGIN",
        "kind": 5,
        "importPath": "loanBook.loanBook.settings",
        "description": "loanBook.loanBook.settings",
        "peekOfCode": "URL_REDIRECT_LOGIN = 'login/'\nAPPEND_SLASH=False\nAUTH_USER_MODEL = 'backend.CustomUser'",
        "detail": "loanBook.loanBook.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "loanBook.loanBook.settings",
        "description": "loanBook.loanBook.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'backend.CustomUser'",
        "detail": "loanBook.loanBook.settings",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "loanBook.loanBook.urls",
        "description": "loanBook.loanBook.urls",
        "peekOfCode": "router = routers.DefaultRouter()\nrouter.register(r'books', BookViewSet, basename=\"book\")\nrouter.register(r'users', CustomUserViewSet, basename='user')\nurlpatterns = [\n  path('',include(router.urls)),\n  path('admin/clearcache/', include('clearcache.urls')),\n  path('books/download/<str:pk>', DownloadBook.as_view()),\n  path('login/', LoginViewSet.as_view()),\n  path('logout/', LogoutViewSet.as_view()),\n  path('admin/', admin.site.urls)",
        "detail": "loanBook.loanBook.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "loanBook.loanBook.urls",
        "description": "loanBook.loanBook.urls",
        "peekOfCode": "urlpatterns = [\n  path('',include(router.urls)),\n  path('admin/clearcache/', include('clearcache.urls')),\n  path('books/download/<str:pk>', DownloadBook.as_view()),\n  path('login/', LoginViewSet.as_view()),\n  path('logout/', LogoutViewSet.as_view()),\n  path('admin/', admin.site.urls)\n]\nif settings.DEBUG:\n  urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)",
        "detail": "loanBook.loanBook.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "loanBook.loanBook.wsgi",
        "description": "loanBook.loanBook.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "loanBook.loanBook.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "loanBook.manage",
        "description": "loanBook.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'loanBook.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "loanBook.manage",
        "documentation": {}
    }
]